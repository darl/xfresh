// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: script/Service.proto

package ru.darlz.ff.service;

public final class ProtobufService {
    private ProtobufService() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public static final class Story extends
            com.google.protobuf.GeneratedMessage {
        // Use Story.newBuilder() to construct.
        private Story() {
            initFields();
        }

        private Story(boolean noInit) {
        }

        private static final Story defaultInstance;

        public static Story getDefaultInstance() {
            return defaultInstance;
        }

        public Story getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_Story_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_Story_fieldAccessorTable;
        }

        // required int32 story_id = 1;
        public static final int STORY_ID_FIELD_NUMBER = 1;
        private boolean hasStoryId;
        private int storyId_ = 0;

        public boolean hasStoryId() {
            return hasStoryId;
        }

        public int getStoryId() {
            return storyId_;
        }

        // required int64 author_id = 2;
        public static final int AUTHOR_ID_FIELD_NUMBER = 2;
        private boolean hasAuthorId;
        private long authorId_ = 0L;

        public boolean hasAuthorId() {
            return hasAuthorId;
        }

        public long getAuthorId() {
            return authorId_;
        }

        // required string description = 3;
        public static final int DESCRIPTION_FIELD_NUMBER = 3;
        private boolean hasDescription;
        private java.lang.String description_ = "";

        public boolean hasDescription() {
            return hasDescription;
        }

        public java.lang.String getDescription() {
            return description_;
        }

        // required string body = 4;
        public static final int BODY_FIELD_NUMBER = 4;
        private boolean hasBody;
        private java.lang.String body_ = "";

        public boolean hasBody() {
            return hasBody;
        }

        public java.lang.String getBody() {
            return body_;
        }

        // required string date = 5;
        public static final int DATE_FIELD_NUMBER = 5;
        private boolean hasDate;
        private java.lang.String date_ = "";

        public boolean hasDate() {
            return hasDate;
        }

        public java.lang.String getDate() {
            return date_;
        }

        // required int32 likedBy = 6;
        public static final int LIKEDBY_FIELD_NUMBER = 6;
        private boolean hasLikedBy;
        private int likedBy_ = 0;

        public boolean hasLikedBy() {
            return hasLikedBy;
        }

        public int getLikedBy() {
            return likedBy_;
        }

        // required bool liked = 7;
        public static final int LIKED_FIELD_NUMBER = 7;
        private boolean hasLiked;
        private boolean liked_ = false;

        public boolean hasLiked() {
            return hasLiked;
        }

        public boolean getLiked() {
            return liked_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            if (!hasStoryId) return false;
            if (!hasAuthorId) return false;
            if (!hasDescription) return false;
            if (!hasBody) return false;
            if (!hasDate) return false;
            if (!hasLikedBy) return false;
            if (!hasLiked) return false;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasStoryId()) {
                output.writeInt32(1, getStoryId());
            }
            if (hasAuthorId()) {
                output.writeInt64(2, getAuthorId());
            }
            if (hasDescription()) {
                output.writeString(3, getDescription());
            }
            if (hasBody()) {
                output.writeString(4, getBody());
            }
            if (hasDate()) {
                output.writeString(5, getDate());
            }
            if (hasLikedBy()) {
                output.writeInt32(6, getLikedBy());
            }
            if (hasLiked()) {
                output.writeBool(7, getLiked());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasStoryId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, getStoryId());
            }
            if (hasAuthorId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, getAuthorId());
            }
            if (hasDescription()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(3, getDescription());
            }
            if (hasBody()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(4, getBody());
            }
            if (hasDate()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(5, getDate());
            }
            if (hasLikedBy()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(6, getLikedBy());
            }
            if (hasLiked()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(7, getLiked());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Story parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.Story prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.Story result;

            // Construct using ru.darlz.ff.service.ProtobufService.Story.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.Story();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.Story internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.Story();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.Story.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.Story getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.Story build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.Story buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.Story buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                ru.darlz.ff.service.ProtobufService.Story returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.Story) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.Story) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.Story other) {
                if (other == ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance()) return this;
                if (other.hasStoryId()) {
                    setStoryId(other.getStoryId());
                }
                if (other.hasAuthorId()) {
                    setAuthorId(other.getAuthorId());
                }
                if (other.hasDescription()) {
                    setDescription(other.getDescription());
                }
                if (other.hasBody()) {
                    setBody(other.getBody());
                }
                if (other.hasDate()) {
                    setDate(other.getDate());
                }
                if (other.hasLikedBy()) {
                    setLikedBy(other.getLikedBy());
                }
                if (other.hasLiked()) {
                    setLiked(other.getLiked());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            setStoryId(input.readInt32());
                            break;
                        }
                        case 16: {
                            setAuthorId(input.readInt64());
                            break;
                        }
                        case 26: {
                            setDescription(input.readString());
                            break;
                        }
                        case 34: {
                            setBody(input.readString());
                            break;
                        }
                        case 42: {
                            setDate(input.readString());
                            break;
                        }
                        case 48: {
                            setLikedBy(input.readInt32());
                            break;
                        }
                        case 56: {
                            setLiked(input.readBool());
                            break;
                        }
                    }
                }
            }


            // required int32 story_id = 1;
            public boolean hasStoryId() {
                return result.hasStoryId();
            }

            public int getStoryId() {
                return result.getStoryId();
            }

            public Builder setStoryId(int value) {
                result.hasStoryId = true;
                result.storyId_ = value;
                return this;
            }

            public Builder clearStoryId() {
                result.hasStoryId = false;
                result.storyId_ = 0;
                return this;
            }

            // required int64 author_id = 2;
            public boolean hasAuthorId() {
                return result.hasAuthorId();
            }

            public long getAuthorId() {
                return result.getAuthorId();
            }

            public Builder setAuthorId(long value) {
                result.hasAuthorId = true;
                result.authorId_ = value;
                return this;
            }

            public Builder clearAuthorId() {
                result.hasAuthorId = false;
                result.authorId_ = 0L;
                return this;
            }

            // required string description = 3;
            public boolean hasDescription() {
                return result.hasDescription();
            }

            public java.lang.String getDescription() {
                return result.getDescription();
            }

            public Builder setDescription(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasDescription = true;
                result.description_ = value;
                return this;
            }

            public Builder clearDescription() {
                result.hasDescription = false;
                result.description_ = getDefaultInstance().getDescription();
                return this;
            }

            // required string body = 4;
            public boolean hasBody() {
                return result.hasBody();
            }

            public java.lang.String getBody() {
                return result.getBody();
            }

            public Builder setBody(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasBody = true;
                result.body_ = value;
                return this;
            }

            public Builder clearBody() {
                result.hasBody = false;
                result.body_ = getDefaultInstance().getBody();
                return this;
            }

            // required string date = 5;
            public boolean hasDate() {
                return result.hasDate();
            }

            public java.lang.String getDate() {
                return result.getDate();
            }

            public Builder setDate(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasDate = true;
                result.date_ = value;
                return this;
            }

            public Builder clearDate() {
                result.hasDate = false;
                result.date_ = getDefaultInstance().getDate();
                return this;
            }

            // required int32 likedBy = 6;
            public boolean hasLikedBy() {
                return result.hasLikedBy();
            }

            public int getLikedBy() {
                return result.getLikedBy();
            }

            public Builder setLikedBy(int value) {
                result.hasLikedBy = true;
                result.likedBy_ = value;
                return this;
            }

            public Builder clearLikedBy() {
                result.hasLikedBy = false;
                result.likedBy_ = 0;
                return this;
            }

            // required bool liked = 7;
            public boolean hasLiked() {
                return result.hasLiked();
            }

            public boolean getLiked() {
                return result.getLiked();
            }

            public Builder setLiked(boolean value) {
                result.hasLiked = true;
                result.liked_ = value;
                return this;
            }

            public Builder clearLiked() {
                result.hasLiked = false;
                result.liked_ = false;
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.Story)
        }

        static {
            defaultInstance = new Story(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.Story)
    }

    public static final class AddStoryRequest extends
            com.google.protobuf.GeneratedMessage {
        // Use AddStoryRequest.newBuilder() to construct.
        private AddStoryRequest() {
            initFields();
        }

        private AddStoryRequest(boolean noInit) {
        }

        private static final AddStoryRequest defaultInstance;

        public static AddStoryRequest getDefaultInstance() {
            return defaultInstance;
        }

        public AddStoryRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_AddStoryRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_AddStoryRequest_fieldAccessorTable;
        }

        // required int64 my_id = 1;
        public static final int MY_ID_FIELD_NUMBER = 1;
        private boolean hasMyId;
        private long myId_ = 0L;

        public boolean hasMyId() {
            return hasMyId;
        }

        public long getMyId() {
            return myId_;
        }

        // required string description = 2;
        public static final int DESCRIPTION_FIELD_NUMBER = 2;
        private boolean hasDescription;
        private java.lang.String description_ = "";

        public boolean hasDescription() {
            return hasDescription;
        }

        public java.lang.String getDescription() {
            return description_;
        }

        // required string body = 3;
        public static final int BODY_FIELD_NUMBER = 3;
        private boolean hasBody;
        private java.lang.String body_ = "";

        public boolean hasBody() {
            return hasBody;
        }

        public java.lang.String getBody() {
            return body_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            if (!hasMyId) return false;
            if (!hasDescription) return false;
            if (!hasBody) return false;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasMyId()) {
                output.writeInt64(1, getMyId());
            }
            if (hasDescription()) {
                output.writeString(2, getDescription());
            }
            if (hasBody()) {
                output.writeString(3, getBody());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasMyId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, getMyId());
            }
            if (hasDescription()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(2, getDescription());
            }
            if (hasBody()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(3, getBody());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.AddStoryRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.AddStoryRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.AddStoryRequest result;

            // Construct using ru.darlz.ff.service.ProtobufService.AddStoryRequest.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.AddStoryRequest();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.AddStoryRequest internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.AddStoryRequest();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.AddStoryRequest.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.AddStoryRequest getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.AddStoryRequest.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.AddStoryRequest build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.AddStoryRequest buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.AddStoryRequest buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                ru.darlz.ff.service.ProtobufService.AddStoryRequest returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.AddStoryRequest) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.AddStoryRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.AddStoryRequest other) {
                if (other == ru.darlz.ff.service.ProtobufService.AddStoryRequest.getDefaultInstance()) return this;
                if (other.hasMyId()) {
                    setMyId(other.getMyId());
                }
                if (other.hasDescription()) {
                    setDescription(other.getDescription());
                }
                if (other.hasBody()) {
                    setBody(other.getBody());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            setMyId(input.readInt64());
                            break;
                        }
                        case 18: {
                            setDescription(input.readString());
                            break;
                        }
                        case 26: {
                            setBody(input.readString());
                            break;
                        }
                    }
                }
            }


            // required int64 my_id = 1;
            public boolean hasMyId() {
                return result.hasMyId();
            }

            public long getMyId() {
                return result.getMyId();
            }

            public Builder setMyId(long value) {
                result.hasMyId = true;
                result.myId_ = value;
                return this;
            }

            public Builder clearMyId() {
                result.hasMyId = false;
                result.myId_ = 0L;
                return this;
            }

            // required string description = 2;
            public boolean hasDescription() {
                return result.hasDescription();
            }

            public java.lang.String getDescription() {
                return result.getDescription();
            }

            public Builder setDescription(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasDescription = true;
                result.description_ = value;
                return this;
            }

            public Builder clearDescription() {
                result.hasDescription = false;
                result.description_ = getDefaultInstance().getDescription();
                return this;
            }

            // required string body = 3;
            public boolean hasBody() {
                return result.hasBody();
            }

            public java.lang.String getBody() {
                return result.getBody();
            }

            public Builder setBody(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasBody = true;
                result.body_ = value;
                return this;
            }

            public Builder clearBody() {
                result.hasBody = false;
                result.body_ = getDefaultInstance().getBody();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.AddStoryRequest)
        }

        static {
            defaultInstance = new AddStoryRequest(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.AddStoryRequest)
    }

    public static final class StoryRequest extends
            com.google.protobuf.GeneratedMessage {
        // Use StoryRequest.newBuilder() to construct.
        private StoryRequest() {
            initFields();
        }

        private StoryRequest(boolean noInit) {
        }

        private static final StoryRequest defaultInstance;

        public static StoryRequest getDefaultInstance() {
            return defaultInstance;
        }

        public StoryRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_StoryRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_StoryRequest_fieldAccessorTable;
        }

        // required int64 user_id = 1;
        public static final int USER_ID_FIELD_NUMBER = 1;
        private boolean hasUserId;
        private long userId_ = 0L;

        public boolean hasUserId() {
            return hasUserId;
        }

        public long getUserId() {
            return userId_;
        }

        // required bool best = 2;
        public static final int BEST_FIELD_NUMBER = 2;
        private boolean hasBest;
        private boolean best_ = false;

        public boolean hasBest() {
            return hasBest;
        }

        public boolean getBest() {
            return best_;
        }

        // required int32 page = 3;
        public static final int PAGE_FIELD_NUMBER = 3;
        private boolean hasPage;
        private int page_ = 0;

        public boolean hasPage() {
            return hasPage;
        }

        public int getPage() {
            return page_;
        }

        // required int64 my_id = 4;
        public static final int MY_ID_FIELD_NUMBER = 4;
        private boolean hasMyId;
        private long myId_ = 0L;

        public boolean hasMyId() {
            return hasMyId;
        }

        public long getMyId() {
            return myId_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            if (!hasUserId) return false;
            if (!hasBest) return false;
            if (!hasPage) return false;
            if (!hasMyId) return false;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasUserId()) {
                output.writeInt64(1, getUserId());
            }
            if (hasBest()) {
                output.writeBool(2, getBest());
            }
            if (hasPage()) {
                output.writeInt32(3, getPage());
            }
            if (hasMyId()) {
                output.writeInt64(4, getMyId());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasUserId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, getUserId());
            }
            if (hasBest()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(2, getBest());
            }
            if (hasPage()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(3, getPage());
            }
            if (hasMyId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, getMyId());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.StoryRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.StoryRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.StoryRequest result;

            // Construct using ru.darlz.ff.service.ProtobufService.StoryRequest.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.StoryRequest();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.StoryRequest internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.StoryRequest();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.StoryRequest.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.StoryRequest getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.StoryRequest.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.StoryRequest build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.StoryRequest buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.StoryRequest buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                ru.darlz.ff.service.ProtobufService.StoryRequest returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.StoryRequest) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.StoryRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.StoryRequest other) {
                if (other == ru.darlz.ff.service.ProtobufService.StoryRequest.getDefaultInstance()) return this;
                if (other.hasUserId()) {
                    setUserId(other.getUserId());
                }
                if (other.hasBest()) {
                    setBest(other.getBest());
                }
                if (other.hasPage()) {
                    setPage(other.getPage());
                }
                if (other.hasMyId()) {
                    setMyId(other.getMyId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            setUserId(input.readInt64());
                            break;
                        }
                        case 16: {
                            setBest(input.readBool());
                            break;
                        }
                        case 24: {
                            setPage(input.readInt32());
                            break;
                        }
                        case 32: {
                            setMyId(input.readInt64());
                            break;
                        }
                    }
                }
            }


            // required int64 user_id = 1;
            public boolean hasUserId() {
                return result.hasUserId();
            }

            public long getUserId() {
                return result.getUserId();
            }

            public Builder setUserId(long value) {
                result.hasUserId = true;
                result.userId_ = value;
                return this;
            }

            public Builder clearUserId() {
                result.hasUserId = false;
                result.userId_ = 0L;
                return this;
            }

            // required bool best = 2;
            public boolean hasBest() {
                return result.hasBest();
            }

            public boolean getBest() {
                return result.getBest();
            }

            public Builder setBest(boolean value) {
                result.hasBest = true;
                result.best_ = value;
                return this;
            }

            public Builder clearBest() {
                result.hasBest = false;
                result.best_ = false;
                return this;
            }

            // required int32 page = 3;
            public boolean hasPage() {
                return result.hasPage();
            }

            public int getPage() {
                return result.getPage();
            }

            public Builder setPage(int value) {
                result.hasPage = true;
                result.page_ = value;
                return this;
            }

            public Builder clearPage() {
                result.hasPage = false;
                result.page_ = 0;
                return this;
            }

            // required int64 my_id = 4;
            public boolean hasMyId() {
                return result.hasMyId();
            }

            public long getMyId() {
                return result.getMyId();
            }

            public Builder setMyId(long value) {
                result.hasMyId = true;
                result.myId_ = value;
                return this;
            }

            public Builder clearMyId() {
                result.hasMyId = false;
                result.myId_ = 0L;
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.StoryRequest)
        }

        static {
            defaultInstance = new StoryRequest(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.StoryRequest)
    }

    public static final class LikeRequest extends
            com.google.protobuf.GeneratedMessage {
        // Use LikeRequest.newBuilder() to construct.
        private LikeRequest() {
            initFields();
        }

        private LikeRequest(boolean noInit) {
        }

        private static final LikeRequest defaultInstance;

        public static LikeRequest getDefaultInstance() {
            return defaultInstance;
        }

        public LikeRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_LikeRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_LikeRequest_fieldAccessorTable;
        }

        // required int64 my_id = 1;
        public static final int MY_ID_FIELD_NUMBER = 1;
        private boolean hasMyId;
        private long myId_ = 0L;

        public boolean hasMyId() {
            return hasMyId;
        }

        public long getMyId() {
            return myId_;
        }

        // required int32 story_id = 2;
        public static final int STORY_ID_FIELD_NUMBER = 2;
        private boolean hasStoryId;
        private int storyId_ = 0;

        public boolean hasStoryId() {
            return hasStoryId;
        }

        public int getStoryId() {
            return storyId_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            if (!hasMyId) return false;
            if (!hasStoryId) return false;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasMyId()) {
                output.writeInt64(1, getMyId());
            }
            if (hasStoryId()) {
                output.writeInt32(2, getStoryId());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasMyId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, getMyId());
            }
            if (hasStoryId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, getStoryId());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikeRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.LikeRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.LikeRequest result;

            // Construct using ru.darlz.ff.service.ProtobufService.LikeRequest.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.LikeRequest();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.LikeRequest internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.LikeRequest();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.LikeRequest.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.LikeRequest getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.LikeRequest.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.LikeRequest build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.LikeRequest buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.LikeRequest buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                ru.darlz.ff.service.ProtobufService.LikeRequest returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.LikeRequest) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.LikeRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.LikeRequest other) {
                if (other == ru.darlz.ff.service.ProtobufService.LikeRequest.getDefaultInstance()) return this;
                if (other.hasMyId()) {
                    setMyId(other.getMyId());
                }
                if (other.hasStoryId()) {
                    setStoryId(other.getStoryId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            setMyId(input.readInt64());
                            break;
                        }
                        case 16: {
                            setStoryId(input.readInt32());
                            break;
                        }
                    }
                }
            }


            // required int64 my_id = 1;
            public boolean hasMyId() {
                return result.hasMyId();
            }

            public long getMyId() {
                return result.getMyId();
            }

            public Builder setMyId(long value) {
                result.hasMyId = true;
                result.myId_ = value;
                return this;
            }

            public Builder clearMyId() {
                result.hasMyId = false;
                result.myId_ = 0L;
                return this;
            }

            // required int32 story_id = 2;
            public boolean hasStoryId() {
                return result.hasStoryId();
            }

            public int getStoryId() {
                return result.getStoryId();
            }

            public Builder setStoryId(int value) {
                result.hasStoryId = true;
                result.storyId_ = value;
                return this;
            }

            public Builder clearStoryId() {
                result.hasStoryId = false;
                result.storyId_ = 0;
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.LikeRequest)
        }

        static {
            defaultInstance = new LikeRequest(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.LikeRequest)
    }

    public static final class OneStoryRequest extends
            com.google.protobuf.GeneratedMessage {
        // Use OneStoryRequest.newBuilder() to construct.
        private OneStoryRequest() {
            initFields();
        }

        private OneStoryRequest(boolean noInit) {
        }

        private static final OneStoryRequest defaultInstance;

        public static OneStoryRequest getDefaultInstance() {
            return defaultInstance;
        }

        public OneStoryRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_OneStoryRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_OneStoryRequest_fieldAccessorTable;
        }

        // required int32 story_id = 1;
        public static final int STORY_ID_FIELD_NUMBER = 1;
        private boolean hasStoryId;
        private int storyId_ = 0;

        public boolean hasStoryId() {
            return hasStoryId;
        }

        public int getStoryId() {
            return storyId_;
        }

        // required int64 my_id = 2;
        public static final int MY_ID_FIELD_NUMBER = 2;
        private boolean hasMyId;
        private long myId_ = 0L;

        public boolean hasMyId() {
            return hasMyId;
        }

        public long getMyId() {
            return myId_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            if (!hasStoryId) return false;
            if (!hasMyId) return false;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasStoryId()) {
                output.writeInt32(1, getStoryId());
            }
            if (hasMyId()) {
                output.writeInt64(2, getMyId());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasStoryId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, getStoryId());
            }
            if (hasMyId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, getMyId());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.OneStoryRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.OneStoryRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.OneStoryRequest result;

            // Construct using ru.darlz.ff.service.ProtobufService.OneStoryRequest.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.OneStoryRequest();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.OneStoryRequest internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.OneStoryRequest();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.OneStoryRequest.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.OneStoryRequest getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.OneStoryRequest.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.OneStoryRequest build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.OneStoryRequest buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.OneStoryRequest buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                ru.darlz.ff.service.ProtobufService.OneStoryRequest returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.OneStoryRequest) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.OneStoryRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.OneStoryRequest other) {
                if (other == ru.darlz.ff.service.ProtobufService.OneStoryRequest.getDefaultInstance()) return this;
                if (other.hasStoryId()) {
                    setStoryId(other.getStoryId());
                }
                if (other.hasMyId()) {
                    setMyId(other.getMyId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            setStoryId(input.readInt32());
                            break;
                        }
                        case 16: {
                            setMyId(input.readInt64());
                            break;
                        }
                    }
                }
            }


            // required int32 story_id = 1;
            public boolean hasStoryId() {
                return result.hasStoryId();
            }

            public int getStoryId() {
                return result.getStoryId();
            }

            public Builder setStoryId(int value) {
                result.hasStoryId = true;
                result.storyId_ = value;
                return this;
            }

            public Builder clearStoryId() {
                result.hasStoryId = false;
                result.storyId_ = 0;
                return this;
            }

            // required int64 my_id = 2;
            public boolean hasMyId() {
                return result.hasMyId();
            }

            public long getMyId() {
                return result.getMyId();
            }

            public Builder setMyId(long value) {
                result.hasMyId = true;
                result.myId_ = value;
                return this;
            }

            public Builder clearMyId() {
                result.hasMyId = false;
                result.myId_ = 0L;
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.OneStoryRequest)
        }

        static {
            defaultInstance = new OneStoryRequest(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.OneStoryRequest)
    }

    public static final class LikedRequest extends
            com.google.protobuf.GeneratedMessage {
        // Use LikedRequest.newBuilder() to construct.
        private LikedRequest() {
            initFields();
        }

        private LikedRequest(boolean noInit) {
        }

        private static final LikedRequest defaultInstance;

        public static LikedRequest getDefaultInstance() {
            return defaultInstance;
        }

        public LikedRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_LikedRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_LikedRequest_fieldAccessorTable;
        }

        // required int32 story_id = 1;
        public static final int STORY_ID_FIELD_NUMBER = 1;
        private boolean hasStoryId;
        private int storyId_ = 0;

        public boolean hasStoryId() {
            return hasStoryId;
        }

        public int getStoryId() {
            return storyId_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            if (!hasStoryId) return false;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasStoryId()) {
                output.writeInt32(1, getStoryId());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasStoryId()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, getStoryId());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.LikedRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.LikedRequest result;

            // Construct using ru.darlz.ff.service.ProtobufService.LikedRequest.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.LikedRequest();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.LikedRequest internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.LikedRequest();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.LikedRequest.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.LikedRequest getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.LikedRequest.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.LikedRequest build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.LikedRequest buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.LikedRequest buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                ru.darlz.ff.service.ProtobufService.LikedRequest returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.LikedRequest) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.LikedRequest) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.LikedRequest other) {
                if (other == ru.darlz.ff.service.ProtobufService.LikedRequest.getDefaultInstance()) return this;
                if (other.hasStoryId()) {
                    setStoryId(other.getStoryId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            setStoryId(input.readInt32());
                            break;
                        }
                    }
                }
            }


            // required int32 story_id = 1;
            public boolean hasStoryId() {
                return result.hasStoryId();
            }

            public int getStoryId() {
                return result.getStoryId();
            }

            public Builder setStoryId(int value) {
                result.hasStoryId = true;
                result.storyId_ = value;
                return this;
            }

            public Builder clearStoryId() {
                result.hasStoryId = false;
                result.storyId_ = 0;
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.LikedRequest)
        }

        static {
            defaultInstance = new LikedRequest(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.LikedRequest)
    }

    public static final class Response extends
            com.google.protobuf.GeneratedMessage {
        // Use Response.newBuilder() to construct.
        private Response() {
            initFields();
        }

        private Response(boolean noInit) {
        }

        private static final Response defaultInstance;

        public static Response getDefaultInstance() {
            return defaultInstance;
        }

        public Response getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_Response_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_Response_fieldAccessorTable;
        }

        // repeated .ru.darlz.ff.service.Story list = 1;
        public static final int LIST_FIELD_NUMBER = 1;
        private java.util.List<ru.darlz.ff.service.ProtobufService.Story> list_ =
                java.util.Collections.emptyList();

        public java.util.List<ru.darlz.ff.service.ProtobufService.Story> getListList() {
            return list_;
        }

        public int getListCount() {
            return list_.size();
        }

        public ru.darlz.ff.service.ProtobufService.Story getList(int index) {
            return list_.get(index);
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            for (ru.darlz.ff.service.ProtobufService.Story element : getListList()) {
                if (!element.isInitialized()) return false;
            }
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (ru.darlz.ff.service.ProtobufService.Story element : getListList()) {
                output.writeMessage(1, element);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (ru.darlz.ff.service.ProtobufService.Story element : getListList()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, element);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.Response parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.Response prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.Response result;

            // Construct using ru.darlz.ff.service.ProtobufService.Response.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.Response();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.Response internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.Response();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.Response.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.Response getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.Response build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.Response buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.Response buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                if (result.list_ != java.util.Collections.EMPTY_LIST) {
                    result.list_ =
                            java.util.Collections.unmodifiableList(result.list_);
                }
                ru.darlz.ff.service.ProtobufService.Response returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.Response) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.Response) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.Response other) {
                if (other == ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance()) return this;
                if (!other.list_.isEmpty()) {
                    if (result.list_.isEmpty()) {
                        result.list_ = new java.util.ArrayList<ru.darlz.ff.service.ProtobufService.Story>();
                    }
                    result.list_.addAll(other.list_);
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 10: {
                            ru.darlz.ff.service.ProtobufService.Story.Builder subBuilder = ru.darlz.ff.service.ProtobufService.Story.newBuilder();
                            input.readMessage(subBuilder, extensionRegistry);
                            addList(subBuilder.buildPartial());
                            break;
                        }
                    }
                }
            }


            // repeated .ru.darlz.ff.service.Story list = 1;
            public java.util.List<ru.darlz.ff.service.ProtobufService.Story> getListList() {
                return java.util.Collections.unmodifiableList(result.list_);
            }

            public int getListCount() {
                return result.getListCount();
            }

            public ru.darlz.ff.service.ProtobufService.Story getList(int index) {
                return result.getList(index);
            }

            public Builder setList(int index, ru.darlz.ff.service.ProtobufService.Story value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.list_.set(index, value);
                return this;
            }

            public Builder setList(int index, ru.darlz.ff.service.ProtobufService.Story.Builder builderForValue) {
                result.list_.set(index, builderForValue.build());
                return this;
            }

            public Builder addList(ru.darlz.ff.service.ProtobufService.Story value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                if (result.list_.isEmpty()) {
                    result.list_ = new java.util.ArrayList<ru.darlz.ff.service.ProtobufService.Story>();
                }
                result.list_.add(value);
                return this;
            }

            public Builder addList(ru.darlz.ff.service.ProtobufService.Story.Builder builderForValue) {
                if (result.list_.isEmpty()) {
                    result.list_ = new java.util.ArrayList<ru.darlz.ff.service.ProtobufService.Story>();
                }
                result.list_.add(builderForValue.build());
                return this;
            }

            public Builder addAllList(
                    java.lang.Iterable<? extends ru.darlz.ff.service.ProtobufService.Story> values) {
                if (result.list_.isEmpty()) {
                    result.list_ = new java.util.ArrayList<ru.darlz.ff.service.ProtobufService.Story>();
                }
                super.addAll(values, result.list_);
                return this;
            }

            public Builder clearList() {
                result.list_ = java.util.Collections.emptyList();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.Response)
        }

        static {
            defaultInstance = new Response(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.Response)
    }

    public static final class LikedResponse extends
            com.google.protobuf.GeneratedMessage {
        // Use LikedResponse.newBuilder() to construct.
        private LikedResponse() {
            initFields();
        }

        private LikedResponse(boolean noInit) {
        }

        private static final LikedResponse defaultInstance;

        public static LikedResponse getDefaultInstance() {
            return defaultInstance;
        }

        public LikedResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_LikedResponse_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.darlz.ff.service.ProtobufService.internal_static_ru_darlz_ff_service_LikedResponse_fieldAccessorTable;
        }

        // repeated int64 user_id = 1;
        public static final int USER_ID_FIELD_NUMBER = 1;
        private java.util.List<java.lang.Long> userId_ =
                java.util.Collections.emptyList();

        public java.util.List<java.lang.Long> getUserIdList() {
            return userId_;
        }

        public int getUserIdCount() {
            return userId_.size();
        }

        public long getUserId(int index) {
            return userId_.get(index);
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (long element : getUserIdList()) {
                output.writeInt64(1, element);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                for (long element : getUserIdList()) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt64SizeNoTag(element);
                }
                size += dataSize;
                size += 1 * getUserIdList().size();
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static ru.darlz.ff.service.ProtobufService.LikedResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.darlz.ff.service.ProtobufService.LikedResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private ru.darlz.ff.service.ProtobufService.LikedResponse result;

            // Construct using ru.darlz.ff.service.ProtobufService.LikedResponse.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new ru.darlz.ff.service.ProtobufService.LikedResponse();
                return builder;
            }

            protected ru.darlz.ff.service.ProtobufService.LikedResponse internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new ru.darlz.ff.service.ProtobufService.LikedResponse();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.darlz.ff.service.ProtobufService.LikedResponse.getDescriptor();
            }

            public ru.darlz.ff.service.ProtobufService.LikedResponse getDefaultInstanceForType() {
                return ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public ru.darlz.ff.service.ProtobufService.LikedResponse build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private ru.darlz.ff.service.ProtobufService.LikedResponse buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public ru.darlz.ff.service.ProtobufService.LikedResponse buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                if (result.userId_ != java.util.Collections.EMPTY_LIST) {
                    result.userId_ =
                            java.util.Collections.unmodifiableList(result.userId_);
                }
                ru.darlz.ff.service.ProtobufService.LikedResponse returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.darlz.ff.service.ProtobufService.LikedResponse) {
                    return mergeFrom((ru.darlz.ff.service.ProtobufService.LikedResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.darlz.ff.service.ProtobufService.LikedResponse other) {
                if (other == ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance()) return this;
                if (!other.userId_.isEmpty()) {
                    if (result.userId_.isEmpty()) {
                        result.userId_ = new java.util.ArrayList<java.lang.Long>();
                    }
                    result.userId_.addAll(other.userId_);
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder(
                                this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                this.setUnknownFields(unknownFields.build());
                                return this;
                            }
                            break;
                        }
                        case 8: {
                            addUserId(input.readInt64());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            while (input.getBytesUntilLimit() > 0) {
                                addUserId(input.readInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            }


            // repeated int64 user_id = 1;
            public java.util.List<java.lang.Long> getUserIdList() {
                return java.util.Collections.unmodifiableList(result.userId_);
            }

            public int getUserIdCount() {
                return result.getUserIdCount();
            }

            public long getUserId(int index) {
                return result.getUserId(index);
            }

            public Builder setUserId(int index, long value) {
                result.userId_.set(index, value);
                return this;
            }

            public Builder addUserId(long value) {
                if (result.userId_.isEmpty()) {
                    result.userId_ = new java.util.ArrayList<java.lang.Long>();
                }
                result.userId_.add(value);
                return this;
            }

            public Builder addAllUserId(
                    java.lang.Iterable<? extends java.lang.Long> values) {
                if (result.userId_.isEmpty()) {
                    result.userId_ = new java.util.ArrayList<java.lang.Long>();
                }
                super.addAll(values, result.userId_);
                return this;
            }

            public Builder clearUserId() {
                result.userId_ = java.util.Collections.emptyList();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:ru.darlz.ff.service.LikedResponse)
        }

        static {
            defaultInstance = new LikedResponse(true);
            ru.darlz.ff.service.ProtobufService.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ru.darlz.ff.service.LikedResponse)
    }

    public static abstract class Service
            implements com.google.protobuf.Service {
        protected Service() {
        }

        public interface Interface {
            public abstract void addStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.AddStoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

            public abstract void getStories(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

            public abstract void getLiked(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

            public abstract void likeIt(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikeRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

            public abstract void getStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.OneStoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Story> done);

            public abstract void likedBy(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikedRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.LikedResponse> done);

        }

        public static com.google.protobuf.Service newReflectiveService(
                final Interface impl) {
            return new Service() {
                @Override
                public void addStory(
                        com.google.protobuf.RpcController controller,
                        ru.darlz.ff.service.ProtobufService.AddStoryRequest request,
                        com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                    impl.addStory(controller, request, done);
                }

                @Override
                public void getStories(
                        com.google.protobuf.RpcController controller,
                        ru.darlz.ff.service.ProtobufService.StoryRequest request,
                        com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                    impl.getStories(controller, request, done);
                }

                @Override
                public void getLiked(
                        com.google.protobuf.RpcController controller,
                        ru.darlz.ff.service.ProtobufService.StoryRequest request,
                        com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                    impl.getLiked(controller, request, done);
                }

                @Override
                public void likeIt(
                        com.google.protobuf.RpcController controller,
                        ru.darlz.ff.service.ProtobufService.LikeRequest request,
                        com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                    impl.likeIt(controller, request, done);
                }

                @Override
                public void getStory(
                        com.google.protobuf.RpcController controller,
                        ru.darlz.ff.service.ProtobufService.OneStoryRequest request,
                        com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Story> done) {
                    impl.getStory(controller, request, done);
                }

                @Override
                public void likedBy(
                        com.google.protobuf.RpcController controller,
                        ru.darlz.ff.service.ProtobufService.LikedRequest request,
                        com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.LikedResponse> done) {
                    impl.likedBy(controller, request, done);
                }

            };
        }

        public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
            return new com.google.protobuf.BlockingService() {
                public final com.google.protobuf.Descriptors.ServiceDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }

                public final com.google.protobuf.Message callBlockingMethod(
                        com.google.protobuf.Descriptors.MethodDescriptor method,
                        com.google.protobuf.RpcController controller,
                        com.google.protobuf.Message request)
                        throws com.google.protobuf.ServiceException {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.callBlockingMethod() given method descriptor for " +
                                        "wrong service type.");
                    }
                    switch (method.getIndex()) {
                        case 0:
                            return impl.addStory(controller, (ru.darlz.ff.service.ProtobufService.AddStoryRequest) request);
                        case 1:
                            return impl.getStories(controller, (ru.darlz.ff.service.ProtobufService.StoryRequest) request);
                        case 2:
                            return impl.getLiked(controller, (ru.darlz.ff.service.ProtobufService.StoryRequest) request);
                        case 3:
                            return impl.likeIt(controller, (ru.darlz.ff.service.ProtobufService.LikeRequest) request);
                        case 4:
                            return impl.getStory(controller, (ru.darlz.ff.service.ProtobufService.OneStoryRequest) request);
                        case 5:
                            return impl.likedBy(controller, (ru.darlz.ff.service.ProtobufService.LikedRequest) request);
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getRequestPrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.getRequestPrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch (method.getIndex()) {
                        case 0:
                            return ru.darlz.ff.service.ProtobufService.AddStoryRequest.getDefaultInstance();
                        case 1:
                            return ru.darlz.ff.service.ProtobufService.StoryRequest.getDefaultInstance();
                        case 2:
                            return ru.darlz.ff.service.ProtobufService.StoryRequest.getDefaultInstance();
                        case 3:
                            return ru.darlz.ff.service.ProtobufService.LikeRequest.getDefaultInstance();
                        case 4:
                            return ru.darlz.ff.service.ProtobufService.OneStoryRequest.getDefaultInstance();
                        case 5:
                            return ru.darlz.ff.service.ProtobufService.LikedRequest.getDefaultInstance();
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getResponsePrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.getResponsePrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch (method.getIndex()) {
                        case 0:
                            return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                        case 1:
                            return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                        case 2:
                            return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                        case 3:
                            return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                        case 4:
                            return ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance();
                        case 5:
                            return ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance();
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

            };
        }

        public abstract void addStory(
                com.google.protobuf.RpcController controller,
                ru.darlz.ff.service.ProtobufService.AddStoryRequest request,
                com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

        public abstract void getStories(
                com.google.protobuf.RpcController controller,
                ru.darlz.ff.service.ProtobufService.StoryRequest request,
                com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

        public abstract void getLiked(
                com.google.protobuf.RpcController controller,
                ru.darlz.ff.service.ProtobufService.StoryRequest request,
                com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

        public abstract void likeIt(
                com.google.protobuf.RpcController controller,
                ru.darlz.ff.service.ProtobufService.LikeRequest request,
                com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done);

        public abstract void getStory(
                com.google.protobuf.RpcController controller,
                ru.darlz.ff.service.ProtobufService.OneStoryRequest request,
                com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Story> done);

        public abstract void likedBy(
                com.google.protobuf.RpcController controller,
                ru.darlz.ff.service.ProtobufService.LikedRequest request,
                com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.LikedResponse> done);

        public static final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
            return ru.darlz.ff.service.ProtobufService.getDescriptor().getServices().get(0);
        }

        public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public final void callMethod(
                com.google.protobuf.Descriptors.MethodDescriptor method,
                com.google.protobuf.RpcController controller,
                com.google.protobuf.Message request,
                com.google.protobuf.RpcCallback<
                        com.google.protobuf.Message> done) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.callMethod() given method descriptor for wrong " +
                                "service type.");
            }
            switch (method.getIndex()) {
                case 0:
                    this.addStory(controller, (ru.darlz.ff.service.ProtobufService.AddStoryRequest) request,
                            com.google.protobuf.RpcUtil.<ru.darlz.ff.service.ProtobufService.Response>specializeCallback(
                                    done));
                    return;
                case 1:
                    this.getStories(controller, (ru.darlz.ff.service.ProtobufService.StoryRequest) request,
                            com.google.protobuf.RpcUtil.<ru.darlz.ff.service.ProtobufService.Response>specializeCallback(
                                    done));
                    return;
                case 2:
                    this.getLiked(controller, (ru.darlz.ff.service.ProtobufService.StoryRequest) request,
                            com.google.protobuf.RpcUtil.<ru.darlz.ff.service.ProtobufService.Response>specializeCallback(
                                    done));
                    return;
                case 3:
                    this.likeIt(controller, (ru.darlz.ff.service.ProtobufService.LikeRequest) request,
                            com.google.protobuf.RpcUtil.<ru.darlz.ff.service.ProtobufService.Response>specializeCallback(
                                    done));
                    return;
                case 4:
                    this.getStory(controller, (ru.darlz.ff.service.ProtobufService.OneStoryRequest) request,
                            com.google.protobuf.RpcUtil.<ru.darlz.ff.service.ProtobufService.Story>specializeCallback(
                                    done));
                    return;
                case 5:
                    this.likedBy(controller, (ru.darlz.ff.service.ProtobufService.LikedRequest) request,
                            com.google.protobuf.RpcUtil.<ru.darlz.ff.service.ProtobufService.LikedResponse>specializeCallback(
                                    done));
                    return;
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getRequestPrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.getRequestPrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch (method.getIndex()) {
                case 0:
                    return ru.darlz.ff.service.ProtobufService.AddStoryRequest.getDefaultInstance();
                case 1:
                    return ru.darlz.ff.service.ProtobufService.StoryRequest.getDefaultInstance();
                case 2:
                    return ru.darlz.ff.service.ProtobufService.StoryRequest.getDefaultInstance();
                case 3:
                    return ru.darlz.ff.service.ProtobufService.LikeRequest.getDefaultInstance();
                case 4:
                    return ru.darlz.ff.service.ProtobufService.OneStoryRequest.getDefaultInstance();
                case 5:
                    return ru.darlz.ff.service.ProtobufService.LikedRequest.getDefaultInstance();
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getResponsePrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.getResponsePrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch (method.getIndex()) {
                case 0:
                    return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                case 1:
                    return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                case 2:
                    return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                case 3:
                    return ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance();
                case 4:
                    return ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance();
                case 5:
                    return ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance();
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public static Stub newStub(
                com.google.protobuf.RpcChannel channel) {
            return new Stub(channel);
        }

        public static final class Stub extends ru.darlz.ff.service.ProtobufService.Service implements Interface {
            private Stub(com.google.protobuf.RpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.RpcChannel channel;

            public com.google.protobuf.RpcChannel getChannel() {
                return channel;
            }

            public void addStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.AddStoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                ru.darlz.ff.service.ProtobufService.Response.class,
                                ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance()));
            }

            public void getStories(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(1),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                ru.darlz.ff.service.ProtobufService.Response.class,
                                ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance()));
            }

            public void getLiked(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(2),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                ru.darlz.ff.service.ProtobufService.Response.class,
                                ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance()));
            }

            public void likeIt(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikeRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Response> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(3),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                ru.darlz.ff.service.ProtobufService.Response.class,
                                ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance()));
            }

            public void getStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.OneStoryRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.Story> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(4),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                ru.darlz.ff.service.ProtobufService.Story.class,
                                ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance()));
            }

            public void likedBy(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikedRequest request,
                    com.google.protobuf.RpcCallback<ru.darlz.ff.service.ProtobufService.LikedResponse> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(5),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                ru.darlz.ff.service.ProtobufService.LikedResponse.class,
                                ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance()));
            }
        }

        public static BlockingInterface newBlockingStub(
                com.google.protobuf.BlockingRpcChannel channel) {
            return new BlockingStub(channel);
        }

        public interface BlockingInterface {
            public ru.darlz.ff.service.ProtobufService.Response addStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.AddStoryRequest request)
                    throws com.google.protobuf.ServiceException;

            public ru.darlz.ff.service.ProtobufService.Response getStories(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request)
                    throws com.google.protobuf.ServiceException;

            public ru.darlz.ff.service.ProtobufService.Response getLiked(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request)
                    throws com.google.protobuf.ServiceException;

            public ru.darlz.ff.service.ProtobufService.Response likeIt(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikeRequest request)
                    throws com.google.protobuf.ServiceException;

            public ru.darlz.ff.service.ProtobufService.Story getStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.OneStoryRequest request)
                    throws com.google.protobuf.ServiceException;

            public ru.darlz.ff.service.ProtobufService.LikedResponse likedBy(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikedRequest request)
                    throws com.google.protobuf.ServiceException;
        }

        private static final class BlockingStub implements BlockingInterface {
            private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.BlockingRpcChannel channel;

            public ru.darlz.ff.service.ProtobufService.Response addStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.AddStoryRequest request)
                    throws com.google.protobuf.ServiceException {
                return (ru.darlz.ff.service.ProtobufService.Response) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance());
            }


            public ru.darlz.ff.service.ProtobufService.Response getStories(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request)
                    throws com.google.protobuf.ServiceException {
                return (ru.darlz.ff.service.ProtobufService.Response) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(1),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance());
            }


            public ru.darlz.ff.service.ProtobufService.Response getLiked(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.StoryRequest request)
                    throws com.google.protobuf.ServiceException {
                return (ru.darlz.ff.service.ProtobufService.Response) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(2),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance());
            }


            public ru.darlz.ff.service.ProtobufService.Response likeIt(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikeRequest request)
                    throws com.google.protobuf.ServiceException {
                return (ru.darlz.ff.service.ProtobufService.Response) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(3),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Response.getDefaultInstance());
            }


            public ru.darlz.ff.service.ProtobufService.Story getStory(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.OneStoryRequest request)
                    throws com.google.protobuf.ServiceException {
                return (ru.darlz.ff.service.ProtobufService.Story) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(4),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.Story.getDefaultInstance());
            }


            public ru.darlz.ff.service.ProtobufService.LikedResponse likedBy(
                    com.google.protobuf.RpcController controller,
                    ru.darlz.ff.service.ProtobufService.LikedRequest request)
                    throws com.google.protobuf.ServiceException {
                return (ru.darlz.ff.service.ProtobufService.LikedResponse) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(5),
                        controller,
                        request,
                        ru.darlz.ff.service.ProtobufService.LikedResponse.getDefaultInstance());
            }

        }
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_Story_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_Story_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_AddStoryRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_AddStoryRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_StoryRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_StoryRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_LikeRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_LikeRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_OneStoryRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_OneStoryRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_LikedRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_LikedRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_Response_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_Response_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_ru_darlz_ff_service_LikedResponse_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_ru_darlz_ff_service_LikedResponse_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\024script/Service.proto\022\023ru.darlz.ff.serv" +
                        "ice\"}\n\005Story\022\020\n\010story_id\030\001 \002(\005\022\021\n\tauthor" +
                        "_id\030\002 \002(\003\022\023\n\013description\030\003 \002(\t\022\014\n\004body\030\004" +
                        " \002(\t\022\014\n\004date\030\005 \002(\t\022\017\n\007likedBy\030\006 \002(\005\022\r\n\005l" +
                        "iked\030\007 \002(\010\"C\n\017AddStoryRequest\022\r\n\005my_id\030\001" +
                        " \002(\003\022\023\n\013description\030\002 \002(\t\022\014\n\004body\030\003 \002(\t\"" +
                        "J\n\014StoryRequest\022\017\n\007user_id\030\001 \002(\003\022\014\n\004best" +
                        "\030\002 \002(\010\022\014\n\004page\030\003 \002(\005\022\r\n\005my_id\030\004 \002(\003\".\n\013L" +
                        "ikeRequest\022\r\n\005my_id\030\001 \002(\003\022\020\n\010story_id\030\002 " +
                        "\002(\005\"2\n\017OneStoryRequest\022\020\n\010story_id\030\001 \002(\005",
                "\022\r\n\005my_id\030\002 \002(\003\" \n\014LikedRequest\022\020\n\010story" +
                        "_id\030\001 \002(\005\"4\n\010Response\022(\n\004list\030\001 \003(\0132\032.ru" +
                        ".darlz.ff.service.Story\" \n\rLikedResponse" +
                        "\022\017\n\007user_id\030\001 \003(\0032\343\003\n\007Service\022O\n\010addStor" +
                        "y\022$.ru.darlz.ff.service.AddStoryRequest\032" +
                        "\035.ru.darlz.ff.service.Response\022N\n\ngetSto" +
                        "ries\022!.ru.darlz.ff.service.StoryRequest\032" +
                        "\035.ru.darlz.ff.service.Response\022L\n\010getLik" +
                        "ed\022!.ru.darlz.ff.service.StoryRequest\032\035." +
                        "ru.darlz.ff.service.Response\022I\n\006likeIt\022 ",
                ".ru.darlz.ff.service.LikeRequest\032\035.ru.da" +
                        "rlz.ff.service.Response\022L\n\010getStory\022$.ru" +
                        ".darlz.ff.service.OneStoryRequest\032\032.ru.d" +
                        "arlz.ff.service.Story\022P\n\007likedBy\022!.ru.da" +
                        "rlz.ff.service.LikedRequest\032\".ru.darlz.f" +
                        "f.service.LikedResponseB\024B\017ProtobufServi" +
                        "ce\210\001\001"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_ru_darlz_ff_service_Story_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_ru_darlz_ff_service_Story_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_Story_descriptor,
                                new java.lang.String[]{"StoryId", "AuthorId", "Description", "Body", "Date", "LikedBy", "Liked",},
                                ru.darlz.ff.service.ProtobufService.Story.class,
                                ru.darlz.ff.service.ProtobufService.Story.Builder.class);
                        internal_static_ru_darlz_ff_service_AddStoryRequest_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_ru_darlz_ff_service_AddStoryRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_AddStoryRequest_descriptor,
                                new java.lang.String[]{"MyId", "Description", "Body",},
                                ru.darlz.ff.service.ProtobufService.AddStoryRequest.class,
                                ru.darlz.ff.service.ProtobufService.AddStoryRequest.Builder.class);
                        internal_static_ru_darlz_ff_service_StoryRequest_descriptor =
                                getDescriptor().getMessageTypes().get(2);
                        internal_static_ru_darlz_ff_service_StoryRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_StoryRequest_descriptor,
                                new java.lang.String[]{"UserId", "Best", "Page", "MyId",},
                                ru.darlz.ff.service.ProtobufService.StoryRequest.class,
                                ru.darlz.ff.service.ProtobufService.StoryRequest.Builder.class);
                        internal_static_ru_darlz_ff_service_LikeRequest_descriptor =
                                getDescriptor().getMessageTypes().get(3);
                        internal_static_ru_darlz_ff_service_LikeRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_LikeRequest_descriptor,
                                new java.lang.String[]{"MyId", "StoryId",},
                                ru.darlz.ff.service.ProtobufService.LikeRequest.class,
                                ru.darlz.ff.service.ProtobufService.LikeRequest.Builder.class);
                        internal_static_ru_darlz_ff_service_OneStoryRequest_descriptor =
                                getDescriptor().getMessageTypes().get(4);
                        internal_static_ru_darlz_ff_service_OneStoryRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_OneStoryRequest_descriptor,
                                new java.lang.String[]{"StoryId", "MyId",},
                                ru.darlz.ff.service.ProtobufService.OneStoryRequest.class,
                                ru.darlz.ff.service.ProtobufService.OneStoryRequest.Builder.class);
                        internal_static_ru_darlz_ff_service_LikedRequest_descriptor =
                                getDescriptor().getMessageTypes().get(5);
                        internal_static_ru_darlz_ff_service_LikedRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_LikedRequest_descriptor,
                                new java.lang.String[]{"StoryId",},
                                ru.darlz.ff.service.ProtobufService.LikedRequest.class,
                                ru.darlz.ff.service.ProtobufService.LikedRequest.Builder.class);
                        internal_static_ru_darlz_ff_service_Response_descriptor =
                                getDescriptor().getMessageTypes().get(6);
                        internal_static_ru_darlz_ff_service_Response_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_Response_descriptor,
                                new java.lang.String[]{"List",},
                                ru.darlz.ff.service.ProtobufService.Response.class,
                                ru.darlz.ff.service.ProtobufService.Response.Builder.class);
                        internal_static_ru_darlz_ff_service_LikedResponse_descriptor =
                                getDescriptor().getMessageTypes().get(7);
                        internal_static_ru_darlz_ff_service_LikedResponse_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_ru_darlz_ff_service_LikedResponse_descriptor,
                                new java.lang.String[]{"UserId",},
                                ru.darlz.ff.service.ProtobufService.LikedResponse.class,
                                ru.darlz.ff.service.ProtobufService.LikedResponse.Builder.class);
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
    }

    public static void internalForceInit() {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
